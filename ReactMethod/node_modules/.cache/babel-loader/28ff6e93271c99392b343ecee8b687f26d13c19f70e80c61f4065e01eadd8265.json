{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub Repo\\\\Password-Validation\\\\ReactMethod\\\\src\\\\Components\\\\Password.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Password() {\n  _s();\n  const [pass, setPass] = useState(\"\");\n  const [eight, setEight] = useState(\"\");\n  const [upp, setUpp] = useState(\"\");\n  const [low, setLow] = useState(\"\");\n  const [num, setNum] = useState(\"\");\n  const [spl, setSpl] = useState(\"\");\n\n  //   const mystyle = {}\n  useEffect(() => {\n    if (pass >= 7) {}\n  }, [eight, upp, low, num, spl]);\n  const verify = e => {\n    let received = e.target.value;\n    setPass(received);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      onChange: verify\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Password \", pass]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"condition\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          onChange: e => {\n            eight(e.target.value);\n          },\n          children: \"Eight\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Upp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Low\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Num\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Spl\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Password, \"hUBjJ5GuFBWqd1LRBEd0cBTEBzg=\");\n_c = Password;\nvar _c;\n$RefreshReg$(_c, \"Password\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Password","_s","pass","setPass","eight","setEight","upp","setUpp","low","setLow","num","setNum","spl","setSpl","verify","e","received","target","value","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["D:/GitHub Repo/Password-Validation/ReactMethod/src/Components/Password.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nexport default function Password() {\r\n  const [pass, setPass] = useState(\"\");\r\n  const [eight, setEight] = useState(\"\");\r\n  const [upp, setUpp] = useState(\"\");\r\n  const [low, setLow] = useState(\"\");\r\n  const [num, setNum] = useState(\"\");\r\n  const [spl, setSpl] = useState(\"\");\r\n\r\n//   const mystyle = {}\r\n  useEffect(()=>{\r\n    if (pass >= 7) {\r\n        \r\n    }\r\n\r\n  },[eight, upp, low, num, spl])\r\n\r\n  const verify = (e) => {\r\n    let received = e.target.value;\r\n    setPass(received);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <input type=\"password\" onChange={verify} />\r\n      <h1>Password {pass}</h1>\r\n      <div className=\"condition\">\r\n        <ul>\r\n          <li onChange={(e)=>{eight(e.target.value)}}>Eight</li>\r\n          <li>Upp</li>\r\n          <li>Low</li>\r\n          <li>Num</li>\r\n          <li>Spl</li>\r\n        </ul>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE5C,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EACjC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,GAAG,EAAEC,MAAM,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACa,GAAG,EAAEC,MAAM,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACe,GAAG,EAAEC,MAAM,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACiB,GAAG,EAAEC,MAAM,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;;EAEpC;EACED,SAAS,CAAC,MAAI;IACZ,IAAIQ,IAAI,IAAI,CAAC,EAAE,CAEf;EAEF,CAAC,EAAC,CAACE,KAAK,EAAEE,GAAG,EAAEE,GAAG,EAAEE,GAAG,EAAEE,GAAG,CAAC,CAAC;EAE9B,MAAME,MAAM,GAAIC,CAAC,IAAK;IACpB,IAAIC,QAAQ,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK;IAC7Bf,OAAO,CAACa,QAAQ,CAAC;EACnB,CAAC;EAED,oBACEnB,OAAA,CAAAE,SAAA;IAAAoB,QAAA,gBACEtB,OAAA;MAAOuB,IAAI,EAAC,UAAU;MAACC,QAAQ,EAAEP;IAAO;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC3C5B,OAAA;MAAAsB,QAAA,GAAI,WAAS,EAACjB,IAAI;IAAA;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACxB5B,OAAA;MAAK6B,SAAS,EAAC,WAAW;MAAAP,QAAA,eACxBtB,OAAA;QAAAsB,QAAA,gBACEtB,OAAA;UAAIwB,QAAQ,EAAGN,CAAC,IAAG;YAACX,KAAK,CAACW,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC;UAAA,CAAE;UAAAC,QAAA,EAAC;QAAK;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACtD5B,OAAA;UAAAsB,QAAA,EAAI;QAAG;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACZ5B,OAAA;UAAAsB,QAAA,EAAI;QAAG;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACZ5B,OAAA;UAAAsB,QAAA,EAAI;QAAG;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACZ5B,OAAA;UAAAsB,QAAA,EAAI;QAAG;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA,eACN,CAAC;AAEP;AAACxB,EAAA,CApCuBD,QAAQ;AAAA2B,EAAA,GAAR3B,QAAQ;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}